stages:
- build
- publish
- mirror

build_images_56:
  stage: build
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-5.6.gz \
    --image-name image-5.6 \
    --docker-file 5.6/Dockerfile

    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-5.6-debug.gz \
    --image-name image-5.6-debug \
    --docker-file 5.6/debug/Dockerfile
  artifacts:
    name: docker-images
    paths:
    - "image-*.gz"
  tags:
  - docker
  only:
  - /^5\.6-\d+/
  - branches

build_images_71:
  stage: build
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-7.1.gz \
    --image-name image-7.1 \
    --docker-file 7.1/Dockerfile

    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-7.1-debug.gz \
    --image-name image-7.1-debug \
    --docker-file 7.1/debug/Dockerfile
  artifacts:
    name: docker-images
    paths:
    - "image-*.gz"
  tags:
  - docker
  only:
  - /^7\.1-\d+/
  - branches

build_images_72:
  stage: build
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-7.2.gz \
    --image-name image-7.2 \
    --docker-file 7.2/Dockerfile

    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-7.2-debug.gz \
    --image-name image-7.2-debug \
    --docker-file 7.2/debug/Dockerfile
  artifacts:
    name: docker-images
    paths:
    - "image-*.gz"
  tags:
  - docker
  only:
  - /^7\.2-\d+/
  - branches

build_images_73:
  stage: build
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-7.3.gz \
    --image-name image-7.3 \
    --docker-file 7.3/Dockerfile

    deployer build \
    --build-arg HTTP_PROXY=${HTTP_PROXY} \
    --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
    --build-arg FTP_PROXY=${FTP_PROXY} \
    --build-arg NO_PROXY=${NO_PROXY} \
    --output image-7.3-debug.gz \
    --image-name image-7.3-debug \
    --docker-file 7.3/debug/Dockerfile
  artifacts:
    name: docker-images
    paths:
    - "image-*.gz"
  tags:
  - docker
  only:
  - /^7\.3-\d+/
  - branches

## u.s. not working due to proxy-issues (pear+https)
# build_images_53_vufind1:
#   stage: build
#   image: ubleipzig/deployer:1.4.4
#   services:
#   - docker:dind
#   script: |
#     ## if this job results from a tag we only build for the tag's version
#     if [ "${CI_COMMIT_TAG}" != "" -a "${CI_COMMIT_TAG%-*}" != "${majorminor}" ]; then echo not building for "$majorminor"; exit 0; fi

#     deployer build \
#     --build-arg HTTP_PROXY=${HTTP_PROXY} \
#     --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
#     --build-arg FTP_PROXY=${FTP_PROXY} \
#     --build-arg NO_PROXY=${NO_PROXY} \
#     --output image-5.3-vufind1-debug.gz \
#     --docker-file 5.3/vufind1/debug/Dockerfile
#   artifacts:
#     name: docker-images
#     paths:
#     - "image-*.gz"
#   tags:
#   - docker

publish_production_images_56:
  stage: publish
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    declare suffix=`expr ${CI_COMMIT_TAG} ':' '[^-]\+-\(.*\)'`

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-5.6.gz \
    --image-name image-5.6 \
    --name ubleipzig/vufind-php \
    --tag 5.6-${suffix} \
    --tag 5.6 \
    --tag 5

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-5.6-debug.gz \
    --image-name image-5.6-debug \
    --name ubleipzig/vufind-php \
    --tag 5.6-${suffix}-debug \
    --tag 5.6-debug \
    --tag 5-debug
  tags:
  - docker
  only:
  - /^5\.6-\d+/
  dependencies:
  - build_images_56
  except:
  - branches

publish_production_images_71:
  stage: publish
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    declare suffix=`expr ${CI_COMMIT_TAG} ':' '[^-]\+-\(.*\)'`

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-7.1.gz \
    --image-name image-7.1 \
    --name ubleipzig/vufind-php \
    --tag 7.1-${suffix} \
    --tag 7.1 \

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-7.1-debug.gz \
    --image-name image-7.1-debug \
    --name ubleipzig/vufind-php \
    --tag 7.1-${suffix}-debug \
    --tag 7.1-debug
  tags:
  - docker
  only:
  - /^7\.1-\d+/
  dependencies:
  - build_images_71
  except:
  - branches


publish_production_images_72:
  stage: publish
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    declare suffix=`expr ${CI_COMMIT_TAG} ':' '[^-]\+-\(.*\)'`

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-7.2.gz \
    --image-name image-7.2 \
    --name ubleipzig/vufind-php \
    --tag 7.2-${suffix} \
    --tag 7.2 \

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-7.2-debug.gz \
    --image-name image-7.2-debug \
    --name ubleipzig/vufind-php \
    --tag 7.2-${suffix}-debug \
    --tag 7.2-debug
  tags:
  - docker
  only:
  - /^7\.2-\d+/
  dependencies:
  - build_images_72
  except:
  - branches

publish_production_images_73:
  stage: publish
  image: ubleipzig/deployer:1.4.4
  services:
  - docker:dind
  script: |
    declare suffix=`expr ${CI_COMMIT_TAG} ':' '[^-]\+-\(.*\)'`

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-7.3.gz \
    --image-name image-7.3 \
    --name ubleipzig/vufind-php \
    --tag 7.3-${suffix} \
    --tag 7.3 \
    --tag 7 \
    --tag latest

    deployer publish \
    --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
    --input image-7.3-debug.gz \
    --image-name image-7.3-debug \
    --name ubleipzig/vufind-php \
    --tag 7.3-${suffix}-debug \
    --tag 7-debug \
    --tag latest-debug
  tags:
  - docker
  only:
  - /^7\.3-\d+/
  dependencies:
  - build_images_73
  except:
  - branches

# publish_production_images_5.3_vufind1:
#   stage: publish
#   image: ubleipzig/deployer:1.4.4
#   services:
#   - docker:dind
#   script: |
#     declare suffix=`expr ${CI_COMMIT_TAG} ':' 'vufind1-[^-]\+-\(.*\)'`
#
#     deployer publish \
#     --docker-config "${DOCKER_PRODUCTION_AUTH_CONFIG}" \
#     --image-name image-5.3-vufind1 \
#     --name ubleipzig/vufind-php \
#     --tag vufind1-5.3-${suffix}-debug \
#     --tag vufind1-5.3-debug \
#     --tag vufind1-5-debug
#   tags:
#   - docker
#   only:
#   - /^vufind1-5.3-\d+/
#   dependencies:
#   - build_images_53_vufind1
#   except:
#   - branches

github_mirror:
  stage: mirror
  image:
    name: alpine/git
    entrypoint: [ "/bin/sh", "-c" ]
  variables:
    GIT_STRATEGY: clone
    GIT_CHECKOUT: "false"
  script: |
    cd /tmp
    git clone --mirror ${CI_REPOSITORY_URL} project
    cd project
    git remote add github https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/ubleipzig/vufind-php.git
    git push --mirror github
  tags:
  - docker
